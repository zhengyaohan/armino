
CC ?= clang
CXX ?= clang++

# Use ccache if enabled
ifeq ($(USE_CCACHE),1)
ifneq (,$(wildcard /usr/bin/ccache))
    CC := ccache clang
    CXX := ccache clang++
endif
endif

AR := ar

COMPILER_TARGET := $(shell $(CC) -dumpmachine)
COMPILER_VERSION := $(shell $(CC) --version | grep "version")
DEBUGGER := gdb
SO_EXT := so

SRC_DIRS_Linux := PAL/Linux Common
CRYPTO_Linux := PAL/Crypto/OpenSSL PAL/Crypto/MbedTLS PAL/Crypto/BoringSSL

CFLAGS_Linux := $(CFLAGS_FEATURES_IP) -ffunction-sections -fdata-sections -Wstrict-prototypes -fPIC
CFLAGS_Linux += -pedantic -pedantic-errors -Wextra -Wundef
CFLAGS_Linux += -Wno-nullability-extension -Wno-gcc-compat -Wno-gnu-zero-variadic-macro-arguments -Wno-empty-translation-unit  -Wno-gnu-include-next
CFLAGS_Linux += -IPAL/Crypto/Common

ifeq ("$(notdir $(filter-out ccache,$(CC)))", "clang")
# clang flags
C_ONLY_FLAGS_Linux += -Wunreachable-code-aggressive
else
# gcc flags
CFLAGS_Linux += -fexceptions
C_ONLY_FLAGS_Linux += -Wunreachable-code
endif

CXXFLAGS_Linux := -Wunreachable-code
C_ONLY_FLAGS_Test += -fblocks
C_ONLY_LDFLAGS_Test += -lBlocksRuntime
CFLAGS_Linux += -IPAL/Thread
CFLAGS_Test_Linux += -Wno-pedantic # Disable pedantic errors for unit tests
CFLAGS_Test_Linux += -Wno-extra # Disable extra warnings for unit tests

SRC_DIRS_Linux += PAL/Thread/Mock

# Set compiler optimization level based on build type
# Add debug information for non-release builds
ifeq ($(BUILD_TYPE),Release)
    CFLAGS_Linux += -Os
else
    CFLAGS_Linux += -O0 -g
endif

# HAP_FEATURE_CAMERA dependencies
LDFLAGS_CAMERA := $(shell pkg-config --libs fdk-aac)
CFLAGS_Linux += $(shell pkg-config --cflags fdk-aac)

# Audio dependencies (HAP_FEATURE_MICROPHONE/HAP_FEATURE_SPEAKER)
LDFLAGS_AUDIO := -lasound -lopus
CFLAGS_Linux += $(shell pkg-config --cflags opus)

# HAP_FEATURE_WIFI_ROUTER dependencies
LDFLAGS_WIFIROUTER := -lsqlite3

# HAP_FEATURE_NFC dependencies
LDFLAGS_NFC := -lnfc

LDFLAGS_Linux := -ldns_sd -pthread -lm
LDFLAGS_Linux += $(LDFLAGS_CAMERA)
LDFLAGS_Linux += $(LDFLAGS_AUDIO)
LDFLAGS_Linux += $(LDFLAGS_WIFIROUTER)
LDFLAGS_Linux += $(LDFLAGS_NFC)

ifeq ($(HAP_KEY_EXPORT),1)
    CFLAGS_Linux += -IExternal/AirPlay/CFHeaders
endif

ifeq ($(BUILD_TYPE),Release)
    LDFLAGS_Linux += -Wl,--gc-sections -Wl,--as-needed -Wl,--strip-all
endif

CFLAGS_OpenSSL += $(shell pkg-config --cflags openssl)
LDFLAGS_OpenSSL += $(shell pkg-config --libs openssl)

CFLAGS_MbedTLS := -I/usr/local/include
LDFLAGS_MbedTLS := -L/usr/local/lib -lmbedcrypto -Wl,-rpath,/usr/local/lib

CFLAGS_BoringSSL := -I/usr/local/include/boringssl/
LDFLAGS_BoringSSL := -L/usr/local/lib/boringssl/ -lcrypto -Wl,-rpath,/usr/local/lib/boringssl

LINK_BEGIN_Linux := -Wl,--start-group
LINK_END_Linux := -Wl,--end-group

SKIPPED_TESTS_Linux := HAPExhaustiveUTF8Test

PROTOCOLS_Linux := IP

