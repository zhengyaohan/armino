/* c_hwpal_device_bk.h
 *
 * Configuration Handling for Driver Framework Device API implementation.
 * A build-level configuration file is included and sanity-checked.
 * Do not edit this file. Edit cs_hwpal.h instead.
 */

/*****************************************************************************
* Copyright (c) 2017 INSIDE Secure B.V. All Rights Reserved.
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 2 of the License, or
* any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*****************************************************************************/

/*----------------------------------------------------------------
 * get configuration settings from product config file
 */

// Top-level Hardware platform configuration
#include "cs_hwpal_bk.h"


// Enables strict argument checking for input parameters
//#define HWPAL_STRICT_ARGS_CHECK

// choose from LOG_SEVERITY_INFO, LOG_SEVERITY_WARN, LOG_SEVERITY_CRIT
#ifndef HWPAL_LOG_SEVERITY
#define HWPAL_LOG_SEVERITY  LOG_SEVERITY_INFO
#endif

#ifndef HWPAL_MAX_DEVICE_NAME_LENGTH
#error "Expected HWPAL_MAX_DEVICE_NAME_LENGTH defined by cs_hwpal_umdevxs.h"
#endif

#ifndef HWPAL_DEVICES
#error "Expected HWPAL_DEVICES defined by cs_hwpal_umdevxs.h"
#endif

#ifndef HWPAL_REMAP_ADDRESSES
#error "Expected HWPAL_REMAP_ADDRESSES defined by cs_hwpal_umdevxs.h"
#endif

// Define to remove the PCI configuration space support
//#define HWPAL_REMOVE_DEVICE_PCICONFIGSPACE

/* HWPAL_DEVICE_READ_DELAY_US
 *
 * Device_Read32() function will busy wait for the specified number
 * of microseconds before actually performing the read operation.
 *
 * Note: This is a workaround for posted-writes implementation of
 *       the MMIO register slave interface
 *       (when too fast write-read sequence does not work)
 *
 *
 */
//#define HWPAL_DEVICE_READ_DELAY_US    100

// Maximum number of supported devices,
// must be equal to or greater than the number of devices in the HWPAL_DEVICES
//#define HWPAL_DEVICE_COUNT      1

// Address where the device list is mapped in the MMIO
//#define HWPAL_DEVICE_MEM_ADDR   0x80000000U


/* end of file c_hwpal_device_bk.h */
