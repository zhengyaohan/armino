/* c_hwpal_dmares_bk.h
 *
 * Configuration Handling for Driver Framework Device API implementation.
 * A build-level configuration file is included and sanity-checked.
 * Do not edit this file. Edit cs_hwpal.h instead.
 */

/*****************************************************************************
* Copyright (c) 2017 INSIDE Secure B.V. All Rights Reserved.
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 2 of the License, or
* any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*****************************************************************************/

/*----------------------------------------------------------------
 * get configuration settings from product config file
 */
#include "cs_hwpal_bk.h"


// DMA memory not used for D-cache
//#define HWPAL_ARCH_COHERENT

// choose from LOG_SEVERITY_INFO, LOG_SEVERITY_WARN, LOG_SEVERITY_CRIT
#ifndef HWPAL_LOG_SEVERITY
#define HWPAL_LOG_SEVERITY LOG_SEVERITY_INFO
#endif

#ifndef HWPAL_DMA_NRESOURCES
#error "Expected HWPAL_DMA_NRESOURCES defined by cs_hwpal_umdevxs.h"
#endif

#if HWPAL_DMA_NRESOURCES < 8
#error "HWPAL_DMA_NRESOURCES too small"
#endif

// Remove Attach/Detach functions.
//#define HWPAL_DMARESOURCE_REMOVE_ATTACH

// Lowest allowed DMA address
#ifndef HWPAL_DMARESOURCE_DMA_ADDR_MIN
#define HWPAL_DMARESOURCE_DMA_ADDR_MIN      0
#endif

// Highest allowed DMA address
#ifndef HWPAL_DMARESOURCE_DMA_ADDR_MAX
#define HWPAL_DMARESOURCE_DMA_ADDR_MAX      0xFFFFFFFFU
#endif

// Maximum alignment supported for DMA resources
#ifndef HWPAL_DMARESOURCE_MAX_ALIGNMENT
#define HWPAL_DMARESOURCE_MAX_ALIGNMENT     (1024 * 4)
#endif

// Logging level that DMAResource_CheckAndRegister() function will use
// for reporting errors that can be considered warnings otherwise.
// By setting it to LOG_INFO the user can use this function to check
// whether a buffer can be used for DMA operations without bouncing and keep
// the log file free from the failed check error messages.
#ifndef HWPAL_DMARESOURCE_LOG_LEVEL
#define HWPAL_DMARESOURCE_LOG_LEVEL         LOG_CRIT
#endif


/* end of file c_hwpal_dmares_bk.h */
