
FUNC  void flash_init_gd(void) {
		unsigned int reg_val;

		// flash data to CPU CRC disable
		_WDWORD(0x0080301c, (_RDWORD(0x0080301c))&(~(1<<26)));//0x0000c215

		// flash status register data to be written
		_WDWORD(0x0080301c, (_RDWORD(0x0080301c))&(~(0xffff<<10)));//0x00000215

		// cpu data writting enable
		_WDWORD(0x0080301c, (_RDWORD(0x0080301c))|(1<<9));//0x00000215

		// flash operation command : WRSR2
		reg_val = _RDWORD(0x00803000);	//0x47000000
		reg_val &= (~(0x1f<<24));                  // clr op_type_sw//0x40000000
		reg_val |= (0x07<<24) | (1<<29) | (1<<30); // op_sw, wp_value//0x67000000
		_WDWORD(0x00803000, reg_val);
		_sleep_(1000);
		while(_RDWORD(0x00803000) & (0x01<<31)){;}

		// flash operation command : CE
		reg_val = _RDWORD(0x00803000);
		reg_val &= (~(0x1f<<24));                  // clr op_type_sw
		reg_val |= (0x10<<24) | (1<<29) | (1<<30); // op_sw, wp_value//0x70000000
		_WDWORD(0x00803000, reg_val);
		_sleep_(10000);
		while(_RDWORD(0x00803000) & (0x01<<31)){;}
}

FUNC  void flash_init_xtx (void) {
		unsigned int reg_val;

		// flash data to CPU CRC disable
		_WDWORD(0x0080301c, (_RDWORD(0x0080301c))&(~(1<<26)));//0x0000c215

		// flash status register data to be written
		_WDWORD(0x0080301c, (_RDWORD(0x0080301c))&(~(0xffff<<10)));//0x00000215

		// cpu data writting enable
		_WDWORD(0x0080301c, (_RDWORD(0x0080301c))|(1<<9));//0x00000215

		// flash operation command : WRSR2
		reg_val = _RDWORD(0x00803000);	//0x47000000
		reg_val &= (~(0x1f<<24));                  // clr op_type_sw//0x40000000
		reg_val |= (0x04<<24) | (1<<29) | (1<<30); // op_sw, wp_value//0x67000000
		_WDWORD(0x00803000, reg_val);
		_sleep_(1000);
		while(_RDWORD(0x00803000) & (0x01<<31)){;}

		// flash operation command : CE
		reg_val = _RDWORD(0x00803000);
		reg_val &= (~(0x1f<<24));                  // clr op_type_sw
		reg_val |= (0x4<<24) | (1<<29) | (1<<30); // op_sw, wp_value//0x70000000
		_WDWORD(0x00803000, reg_val);
			
		_sleep_(15000);
		while(_RDWORD(0x00803000) & (0x01<<31)){;}
}


//flash_init_xtx();

LOAD .\Objects\bk_bootloader_low.axf NOCODE 
//LOAD .\Objects\bk_bootloader_low.axf INCREMENTAL